<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMusica.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8888888884m+++/+f+fu+6I8888888888888888m+++/++++/wD4tPPPPPPPPPPPPPPPPIP/AL7777//
        AOvA8848888U888888888oev2y++76SAc88c88888888888888sY++yuAEsc88888888s88808888888
        M2Ssc8888888888888888888888884uic88888888888888888c8888888802M888888888888880888
        888888884aWw8888888888888088w80488888sYK88888888888888c880888888888IWk8888888888
        8888888484888880s7K8888888888888s888888c844OuO/6A8888888888888888888wsKe+/6/+eU8
        888888888888008844m//wDvvvvvtPPPPPPPPPPPPPPPPPKBv/8A777/AO+6c88888888888488c8oI/
        /wD/AL7/AP8A/wDJDzzzzzzzzzzzwzzzyib/AP8Avv8A7/76pzzjzzzzzzzzzzzxzzhb77/777776Bzz
        zyzzzzzzzzzzzzzh77/7/wC/+++s88888888888888888o6++++2+6u08888888888888888888o++/e
        e2wc8888888888888888s888sA800Es888888888888888880408s88c88880888888888888888888w
        88488848w8888888888888888//EABQRAQAAAAAAAAAAAAAAAAAAAJD/2gAIAQMBAT8QUn//xAAUEQEA
        AAAAAAAAAAAAAAAAAACQ/9oACAECAQE/EFJ//8QAKxABAAEDAgQGAgMBAQAAAAAAAREAITFBUFFhgZEQ
        QHGhscEw0SDw8XCA/9oACAEBAAE/EP8AxwYNpRAFWR9RyHnhQIjyYu0VKAOBU4jcQT2aFGoFB7NOgmdV
        6lGWsmSoflWM0RFDdDejYgd2QegDVorYcEJxerQBAg/i8yj5phL9qgxTjIei9cTQ/wCrQVa8MOjQySXP
        wumJ30j00604CnF8z6KgSezLu6nNqCgsDUSdhPMq9sBmmTCRjiOb+OFiwwLPekwI/wCoowHrKKfJRxrF
        D2qCIa0gO5XdTgqdGPRRKrzUN7FItH4P2VbDslCOavSXZJlBzXwORTM4rFYCYdDYQOpYFcMDwlrS350H
        INct2rku1AGAP43+QUlp2Hy0bAamgtIsQ30BgOx5dYFdL0+cGsmh2+dhQRG42aaETpo3z3ny4jGAFzEd
        cUdwYDQNhitZEZ0l9HyywLwqy6gXNIbEMghZ0dHvTRATeJHlWW3IFi+lABjY4qbsnIWBb6PlDw41R994
        tHKKVABsvDbXm2HaaQhMJ5ELEsClOQZrFDhY+k5ZoXehYA2YEQSDqNIRCk43D8yeR3oNhpJHfFPpt15T
        4KIGivf/AEdOlRs8VkZmA1Zd/wAKjJeBV2KnS8UZ70OAXRT9qNJnUY7s0uKxmeHtFGBBhn+9AhfAgO1R
        tQfFAnTQ96XUGXRGP4qCVg4tSRPp9oy0IQcr8F2j0UIkp75oII8I26L1O2TkwC30f4AAATKmAp5Uh9/V
        4qEwAsAQBul1s4LoYdqUCYfEyDAEsMl9QR3o3UbhYHUaFCHpxufp08WBSJOmY6nxRu2uVTBqunr4oOlk
        amp2mjOLE4JO7F2MguGS7xTykVaIx4acqae70yq/Zip3Vq13aRgWH34820Vr5Po0btfnFjKGHakAGG/g
        wJiWVwTDTIDAXC07sUBAHUaK1Eq63PFxextg4dr0bq1AYVmDRuu9vF0MI46jtR/kCcE3YSruPgLj3pSi
        ytAw+N+xb7d/U/O7NTTyEYMR99fE/ojvGw/vpQ8gkNRxuy40KLuh2+KEQTDjwSRHDmoaUrjfVdrbsCZA
        nUSKF2FS4q67ePZpMDl0aUkjJx3NYuoFOskZhffg1UcpoVhleIkSUeJo1d3CDXQepG3gFADK6U+lv+CV
        eHMEH2KfeSWPdpwScix7UZSnzWv8qjED0P4AcBylsHLrjbRqRKYA9aaBYKSOerpRQ2bKx84u0SIInLx/
        EwgQ2gZKZEjA4Nh32qaTQdKbvVopXn5YhOfFQAQEH5cDpE9h8O0oEqAXVoJHLMXU43nT98ZQOb+c0MH7
        M/PtTlyAjy2ccDSiAOdJ2BfhdRac2tACAA4eQMpxqeyhm9B2ZAcqSYJK9C8DWgggxw8lIxALgD97MzXJ
        sun20AEeTSdyRxVssfLeC64KROyl1dPQ8oghyfbZJp0kMwNtd0x5VY2q9tkCMFD42j91KFKUZVz5V4uU
        F4SjZGuTRHKtLpNenlWBWZchL7uxtqVJmSP0P35V0BXYGq4KjFB9zOxk6wdiGlupKvNXyqgFxUt/UelB
        GxoZk+ZXtTyhnX6kv1UNyW5my+mmyKHkzuoIjNj5PKAKrABdeVGBFusv21o2QXsINI8iK9Jk9nyUSgCq
        wASrwKEtgHPL9DSjOzOBAJeS308ig94NKUSMSc37uaizs64suC67D76UIglx/OMnCDR1dXkVjTbfpHA5
        FG0EUYRhHNOuQY1lfcY/KkjoeStDFyT+2CgYNEABtemoOX/S60i1XR4mo/iRsGBSehSZT3jYfFJz6fMK
        o229KTjpxH6oKDmLK/pilFmHIQnR/hpOlQUjYDL7U8nX9hqQlyh0FXoObM3D1c0biWqj/cL0wrrpIdmp
        NgcJKYEjUEoFcHGfYighB4TnvmgI3aP+rf/Z
</value>
  </data>
</root>